local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\243\161","\201\221\143\235\18\33\23\229"),function(v43)if (v9(v43,2)==79) then local v81=0;while true do if (v81==0) then v31=v8(v11(v43,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v10(v8(v43,16));if v31 then local v120=0;local v121;while true do if (0==v120) then v121=v13(v83,v31);v31=nil;v120=1;end if (v120==1) then return v121;end end else return v83;end break;end end end end);v32=nil;v29=1;end if (v29==5) then v41=nil;function v41(v44,v45,v46)local v47=0;local v48;local v49;local v50;while true do if (v47==0) then v48=v44[118 -(32 + 85) ];v49=v44[2];v47=1;end if (v47==1) then v50=v44[3];return function(...)local v91=v48;local v92=v49;local v93=v50;local v94=v39;local v95=1;local v96= -1;local v97={};local v98={...};local v99=v20("#",...) -1 ;local v100={};local v101={};for v117=0,v99 do if (v117>=v93) then v97[v117-v93 ]=v98[v117 + 1 ];else v101[v117]=v98[v117 + 1 ];end end local v102=(v99-v93) + 1 ;local v103;local v104;while true do local v118=0;while true do if (1==v118) then if (v104<=43) then if (v104<=21) then if (v104<=(10 + 0)) then if (v104<=4) then if (v104<=1) then if (v104==0) then v101[v103[2]]=v103[3] + v101[v103[4]] ;else v95=v103[3];end elseif (v104<=2) then local v147=0;local v148;while true do if (v147==0) then v148=v103[2];v101[v148](v101[v148 + 1 ]);break;end end elseif (v104==3) then local v248=v103[2];local v249=v101[v248 + 2 ];local v250=v101[v248] + v249 ;v101[v248]=v250;if (v249>0) then if (v250<=v101[v248 + 1 ]) then local v394=0;while true do if (v394==0) then v95=v103[3];v101[v248 + 3 ]=v250;break;end end end elseif (v250>=v101[v248 + 1 ]) then v95=v103[3];v101[v248 + 3 ]=v250;end else local v252=0;local v253;while true do if (v252==0) then v253=v103[2];v101[v253]=v101[v253](v21(v101,v253 + 1 ,v96));break;end end end elseif (v104<=7) then if (v104<=(2 + 3)) then v101[v103[2]]=v45[v103[3]];elseif (v104>(963 -(892 + 65))) then local v254=v103[2];local v255,v256=v94(v101[v254](v101[v254 + 1 ]));v96=(v256 + v254) -1 ;local v257=0;for v338=v254,v96 do v257=v257 + 1 ;v101[v338]=v255[v257];end else v101[v103[2]]=v103[3];end elseif (v104<=8) then v46[v103[7 -4 ]]=v101[v103[2]];elseif (v104>(16 -7)) then v95=v103[3];else v101[v103[2]]=v103[4 -1 ];end elseif (v104<=(365 -(87 + 263))) then if (v104<=12) then if (v104>11) then local v153=0;local v154;local v155;local v156;local v157;while true do if (v153==2) then for v362=v154,v96 do v157=v157 + 1 + 0 ;v101[v362]=v155[v157];end break;end if (v153==0) then v154=v103[182 -(67 + 113) ];v155,v156=v94(v101[v154](v21(v101,v154 + 1 ,v96)));v153=1;end if (1==v153) then v96=(v156 + v154) -1 ;v157=0;v153=2;end end else local v158=0;local v159;while true do if (0==v158) then v159=v103[2];v101[v159](v21(v101,v159 + 1 ,v103[3]));break;end end end elseif (v104<=13) then local v160=v103[2];local v161=v101[v160];local v162=v101[v160 + 2 ];if (v162>0) then if (v161>v101[v160 + (2 -1) ]) then v95=v103[3];else v101[v160 + 3 ]=v161;end elseif (v161<v101[v160 + 1 ]) then v95=v103[3];else v101[v160 + 3 ]=v161;end elseif (v104>14) then v101[v103[2]]=v101[v103[3]]%v101[v103[4]] ;else v101[v103[2]][v103[3]]=v101[v103[4]];end elseif (v104<=18) then if (v104<=16) then v101[v103[2]]={};elseif (v104==17) then v101[v103[2]]=v101[v103[3]] + v103[4] ;elseif (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3 + 0 ];end elseif (v104<=(75 -56)) then v101[v103[2]]={};elseif (v104==20) then if (v103[2]==v101[v103[4]]) then v95=v95 + (953 -(802 + 150)) ;else v95=v103[3];end elseif v101[v103[5 -3 ]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=32) then if (v104<=26) then if (v104<=23) then if (v104==(39 -17)) then local v165=v92[v103[3]];local v166;local v167={};v166=v18({},{[v7("\132\111\179\207\223\229\107","\19\219\48\218\161\187\128")]=function(v225,v226)local v227=v167[v226];return v227[1][v227[2]];end,[v7("\67\118\213\74\18\120\114\77\222\87","\17\28\41\187\47\101")]=function(v228,v229,v230)local v231=0;local v232;while true do if (v231==0) then v232=v167[v229];v232[1][v232[2]]=v230;break;end end end});for v233=1,v103[4] do local v234=0;local v235;while true do if (1==v234) then if (v235[1]==69) then v167[v233-1 ]={v101,v235[3]};else v167[v233-1 ]={v45,v235[3]};end v100[ #v100 + 1 ]=v167;break;end if (0==v234) then v95=v95 + 1 ;v235=v91[v95];v234=1;end end end v101[v103[2]]=v41(v165,v166,v46);else local v169=0;local v170;while true do if (v169==0) then v170=v103[5 -3 ];v101[v170]=v101[v170](v21(v101,v170 + 1 + 0 ,v96));break;end end end elseif (v104<=24) then v101[v103[2]]= #v101[v103[3 -0 ]];elseif (v104>25) then v101[v103[2]]=v46[v103[3]];else local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==2) then for v399=v270,v96 do v273=v273 + 1 ;v101[v399]=v271[v273];end break;end if (v269==0) then v270=v103[2];v271,v272=v94(v101[v270](v21(v101,v270 + 1 ,v96)));v269=1;end if (v269==1) then v96=(v272 + v270) -1 ;v273=1187 -(1069 + 118) ;v269=2;end end end elseif (v104<=29) then if (v104<=(61 -34)) then v101[v103[2]]=v101[v103[3]]%v103[4] ;elseif (v104==28) then v101[v103[2]]=v101[v103[3]]%v101[v103[4]] ;else do return v101[v103[2]]();end end elseif (v104<=30) then local v173=v103[2];local v174,v175=v94(v101[v173](v21(v101,v173 + 1 ,v103[3])));v96=(v175 + v173) -1 ;local v176=0;for v236=v173,v96 do v176=v176 + 1 ;v101[v236]=v174[v176];end elseif (v104>31) then v101[v103[2]][v101[v103[3]]]=v103[8 -4 ];else v101[v103[2]][v103[3]]=v103[4];end elseif (v104<=37) then if (v104<=34) then if (v104==33) then v101[v103[1 + 1 ]][v101[v103[3]]]=v103[4];else local v179=0;local v180;while true do if (v179==0) then v180=v103[2];v101[v180](v21(v101,v180 + 1 ,v103[3]));break;end end end elseif (v104<=35) then local v181=v103[2];local v182={};for v239=1, #v100 do local v240=v100[v239];for v279=0, #v240 do local v280=0;local v281;local v282;local v283;while true do if (v280==0) then v281=v240[v279];v282=v281[1 -0 ];v280=1;end if (v280==1) then v283=v281[2 + 0 ];if ((v282==v101) and (v283>=v181)) then v182[v283]=v282[v283];v281[792 -(368 + 423) ]=v182;end break;end end end end elseif (v104==36) then local v284=0;local v285;local v286;while true do if (v284==0) then v285=v103[6 -4 ];v286={};v284=1;end if (v284==1) then for v402=1, #v100 do local v403=0;local v404;while true do if (v403==0) then v404=v100[v402];for v433=0, #v404 do local v434=0;local v435;local v436;local v437;while true do if (v434==1) then v437=v435[20 -(10 + 8) ];if ((v436==v101) and (v437>=v285)) then local v443=0;while true do if (v443==0) then v286[v437]=v436[v437];v435[1]=v286;break;end end end break;end if (v434==0) then v435=v404[v433];v436=v435[1];v434=1;end end end break;end end end break;end end elseif (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=40) then if (v104<=38) then local v183=v103[2];v101[v183]=v101[v183](v21(v101,v183 + (3 -2) ,v103[3]));elseif (v104==(481 -(416 + 26))) then local v287=v103[2];local v288=v101[v103[3]];v101[v287 + (3 -2) ]=v288;v101[v287]=v288[v103[4]];else local v292=v103[2];v101[v292]=v101[v292]();end elseif (v104<=41) then local v185=0;local v186;local v187;local v188;while true do if (v185==1) then v188=v101[v186 + 2 ];if (v188>0) then if (v187>v101[v186 + 1 + 0 ]) then v95=v103[3];else v101[v186 + 3 ]=v187;end elseif (v187<v101[v186 + 1 ]) then v95=v103[3];else v101[v186 + 3 ]=v187;end break;end if (v185==0) then v186=v103[2];v187=v101[v186];v185=1;end end elseif (v104>42) then local v294=v103[2];do return v101[v294](v21(v101,v294 + 1 ,v103[3]));end elseif v101[v103[2]] then v95=v95 + (1 -0) ;else v95=v103[3];end elseif (v104<=65) then if (v104<=(492 -(145 + 293))) then if (v104<=48) then if (v104<=45) then if (v104==44) then local v189=v103[2];local v190,v191=v94(v101[v189]());v96=(v191 + v189) -1 ;local v192=0;for v241=v189,v96 do v192=v192 + 1 ;v101[v241]=v190[v192];end else v101[v103[2]]=v41(v92[v103[3]],nil,v46);end elseif (v104<=46) then if (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>47) then v101[v103[2]]=v41(v92[v103[3]],nil,v46);else local v297=v103[2];local v298=v101[v297];for v349=v297 + 1 ,v96 do v15(v298,v101[v349]);end end elseif (v104<=51) then if (v104<=49) then v101[v103[432 -(44 + 386) ]]=v46[v103[3]];elseif (v104==50) then local v299=v103[2];do return v21(v101,v299,v96);end else v46[v103[3]]=v101[v103[2]];end elseif (v104<=52) then v101[v103[2]]=v45[v103[3]];elseif (v104>(1539 -(998 + 488))) then for v350=v103[1 + 1 ],v103[3] do v101[v350]=nil;end elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=59) then if (v104<=56) then if (v104>55) then v101[v103[2]]=v103[3] + v101[v103[4]] ;else local v199=v103[2];local v200,v201=v94(v101[v199](v101[v199 + 1 ]));v96=(v201 + v199) -1 ;local v202=0;for v244=v199,v96 do v202=v202 + 1 ;v101[v244]=v200[v202];end end elseif (v104<=(47 + 10)) then local v203=v103[2];local v204=v101[v203];for v247=v203 + 1 ,v96 do v15(v204,v101[v247]);end elseif (v104>58) then v101[v103[2]]=v101[v103[3]];else local v304=0;local v305;while true do if (v304==0) then v305=v103[2];v101[v305](v101[v305 + 1 ]);break;end end end elseif (v104<=62) then if (v104<=60) then do return;end elseif (v104==61) then v101[v103[2]][v101[v103[3]]]=v101[v103[4]];else local v308=v103[2];local v309=v101[v103[3]];v101[v308 + 1 ]=v309;v101[v308]=v309[v103[4]];end elseif (v104<=63) then local v205=v103[2];v101[v205]=v101[v205]();elseif (v104>64) then v101[v103[774 -(201 + 571) ]][v101[v103[3]]]=v101[v103[4]];else v101[v103[2]]=v101[v103[3]]%v103[4] ;end elseif (v104<=76) then if (v104<=70) then if (v104<=67) then if (v104>66) then local v207=0;local v208;local v209;local v210;while true do if (2==v207) then if (v209>0) then if (v210<=v101[v208 + 1 ]) then local v425=0;while true do if (v425==0) then v95=v103[3];v101[v208 + 3 ]=v210;break;end end end elseif (v210>=v101[v208 + 1 ]) then v95=v103[3];v101[v208 + 3 ]=v210;end break;end if (v207==0) then v208=v103[2];v209=v101[v208 + 2 ];v207=1;end if (1==v207) then v210=v101[v208] + v209 ;v101[v208]=v210;v207=2;end end elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=68) then do return;end elseif (v104>69) then v101[v103[2]]= #v101[v103[3]];else v101[v103[2]]=v101[v103[3]];end elseif (v104<=73) then if (v104<=(1209 -(116 + 1022))) then local v211=v103[2];v101[v211]=v101[v211](v21(v101,v211 + 1 ,v103[3]));elseif (v104==72) then v101[v103[2]]=v101[v103[12 -9 ]][v103[4]];else local v322=0;local v323;while true do if (v322==0) then v323=v103[2];v101[v323](v21(v101,v323 + 1 ,v96));break;end end end elseif (v104<=74) then v101[v103[2]]=v101[v103[3]] + v103[4] ;elseif (v104==75) then do return v101[v103[2]]();end else local v324=v103[2];local v325,v326=v94(v101[v324]());v96=(v326 + v324) -1 ;local v327=0;for v355=v324,v96 do local v356=0;while true do if (v356==0) then v327=v327 + 1 ;v101[v355]=v325[v327];break;end end end end elseif (v104<=81) then if (v104<=78) then if (v104>77) then v101[v103[2]]();else local v214=v103[2];do return v101[v214](v21(v101,v214 + 1 ,v103[3]));end end elseif (v104<=79) then v101[v103[2 + 0 ]][v103[3]]=v101[v103[4]];elseif (v104==80) then v101[v103[2]]();else local v328=0;local v329;while true do if (v328==0) then v329=v103[2];do return v21(v101,v329,v96);end break;end end end elseif (v104<=84) then if (v104<=82) then local v217=0;local v218;local v219;local v220;local v221;while true do if (v217==1) then v96=(v220 + v218) -1 ;v221=0;v217=2;end if (2==v217) then for v379=v218,v96 do v221=v221 + 1 ;v101[v379]=v219[v221];end break;end if (0==v217) then v218=v103[2];v219,v220=v94(v101[v218](v21(v101,v218 + 1 ,v103[3])));v217=1;end end elseif (v104==83) then v101[v103[2]][v103[3]]=v103[14 -10 ];else for v358=v103[2],v103[3] do v101[v358]=nil;end end elseif (v104<=85) then v101[v103[2]]=v101[v103[3]][v103[4]];elseif (v104==(305 -219)) then local v332=0;local v333;local v334;local v335;while true do if (v332==2) then for v407=1,v103[4] do v95=v95 + 1 ;local v408=v91[v95];if (v408[1]==69) then v335[v407-1 ]={v101,v408[3]};else v335[v407-1 ]={v45,v408[3]};end v100[ #v100 + 1 ]=v335;end v101[v103[1 + 1 ]]=v41(v333,v334,v46);break;end if (v332==1) then v335={};v334=v18({},{[v7("\13\57\51\176\5\55\30","\97\82\102\90\222")]=function(v410,v411)local v412=v335[v411];return v412[1][v412[861 -(814 + 45) ]];end,[v7("\17\148\69\194\64\165\32\175\78\223","\204\78\203\43\167\55")]=function(v413,v414,v415)local v416=v335[v414];v416[2 -1 ][v416[2]]=v415;end});v332=2;end if (v332==0) then v333=v92[v103[3]];v334=nil;v332=1;end end else local v336=v103[2];v101[v336](v21(v101,v336 + 1 ,v96));end v95=v95 + 1 ;break;end if (0==v118) then v103=v91[v95];v104=v103[1];v118=1;end end end end;end end end return v41(v40(),{},v28)(...);end if (1==v29) then function v32(v51,v52,v53)if v53 then local v84=0;local v85;while true do if (v84==0) then v85=(v51/(2^(v52-1)))%((5 -3)^(((v53-1) -(v52-1)) + 1)) ;return v85-(v85%(2 -1)) ;end end else local v86=2^(v52-1) ;return (((v51%(v86 + v86))>=v86) and (1 -0)) or 0 ;end end v33=nil;function v33()local v54=0;local v55;while true do if (v54==0) then v55=v9(v27,v30,v30);v30=v30 + 1 ;v54=1;end if (v54==1) then return v55;end end end v34=nil;v29=2;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==1) then v61=v35();v62={};for v105=1,v61 do local v106=0;local v107;local v108;while true do if (v106==1) then if (v107==1) then v108=v33()~=0 ;elseif (v107==(1 + 1)) then v108=v36();elseif (v107==3) then v108=v37();end v62[v105]=v108;break;end if (v106==0) then v107=v33();v108=nil;v106=1;end end end v60[3]=v33();v56=2;end if (2==v56) then for v109=1,v35() do local v110=0;local v111;while true do if (v110==0) then v111=v33();if (v32(v111,1,1)==0) then local v129=0;local v130;local v131;local v132;while true do if (v129==2) then if (v32(v131,1,1 + 0 )==1) then v132[2]=v62[v132[2]];end if (v32(v131,2 -0 ,2)==1) then v132[3]=v62[v132[1068 -(68 + 997) ]];end v129=3;end if (v129==1) then v132={v34(),v34(),nil,nil};if (v130==0) then local v138=0;while true do if (v138==0) then v132[3]=v34();v132[4]=v34();break;end end elseif (v130==1) then v132[3]=v35();elseif (v130==(1639 -(1523 + 114))) then v132[3]=v35() -(2^16) ;elseif (v130==3) then local v224=0;while true do if (v224==0) then v132[3]=v35() -(2^16) ;v132[4]=v34();break;end end end v129=2;end if (v129==3) then if (v32(v131,3,1273 -(226 + 1044) )==1) then v132[4]=v62[v132[17 -13 ]];end v57[v109]=v132;break;end if (v129==0) then v130=v32(v111,2,3);v131=v32(v111,1 + 3 ,6);v129=1;end end end break;end end end for v112=1,v35() do v58[v112-1 ]=v40();end return v60;end if (v56==0) then v57={};v58={};v59={};v60={v57,v58,nil,v59};v56=1;end end end v29=5;end if (v29==3) then function v36()local v63=v35();local v64=v35();local v65=1;local v66=(v32(v64,1,639 -(555 + 64) ) * (2^32)) + v63 ;local v67=v32(v64,21,31);local v68=((v32(v64,963 -(857 + 74) )==1) and  -1) or 1 ;if (v67==0) then if (v66==0) then return v68 * 0 ;else local v114=0;while true do if (v114==0) then v67=1;v65=0;break;end end end elseif (v67==(2615 -(367 + 201))) then return ((v66==0) and (v68 * (1/0))) or (v68 * NaN) ;end return v16(v68,v67-(1950 -(214 + 713)) ) * (v65 + (v66/(2^52))) ;end v37=nil;function v37(v69)local v70=0;local v71;local v72;while true do if (v70==1) then v71=v11(v27,v30,(v30 + v69) -1 );v30=v30 + v69 ;v70=2;end if (v70==0) then v71=nil;if  not v69 then local v119=0;while true do if (v119==0) then v69=v35();if (v69==0) then return "";end break;end end end v70=1;end if (v70==2) then v72={};for v115=1, #v71 do v72[v115]=v10(v9(v11(v71,v115,v115)));end v70=3;end if (3==v70) then return v14(v72);end end end v38=v35;v29=4;end if (v29==2) then function v34()local v73=0;local v74;local v75;while true do if (v73==1) then return (v75 * 256) + v74 ;end if (v73==0) then v74,v75=v9(v27,v30,v30 + (4 -2) );v30=v30 + 2 ;v73=1;end end end v35=nil;function v35()local v76=0;local v77;local v78;local v79;local v80;while true do if (v76==0) then v77,v78,v79,v80=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v76=1;end if (1==v76) then return (v80 * 16777216) + (v79 * 65536) + (v78 * 256) + v77 ;end end end v36=nil;v29=3;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Protected By LuaObfuscator

]]--

